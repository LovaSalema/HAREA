{
  "version": 3,
  "sources": ["../src/index.tsx", "../src/WizardNodeRoutes.tsx", "../src/views/create/WizardNodeEditRoute.tsx", "../src/views/details/WizardNodeDetailsRoute.tsx", "../src/views/details/views/params/containers/WizardNodeParams.tsx"],
  "sourcesContent": ["import '@mzara/control-list-designer/dist/main.css'\r\nimport '@mzara/control-list-designer/dist/index.css'\r\n\r\nexport * from './WizardNodeRoutes'\r\n\r\n", "import { AppRouteProps } from '@mzara/component'\r\nimport React from 'react'\r\nimport { WizardNodeEditRoute } from 'views/create/WizardNodeEditRoute'\r\nimport { WizardNodeDetailsRoute } from 'views/details/WizardNodeDetailsRoute'\r\n\r\nconst WizardNode = React.lazy(() => import('./containers/WizardNode'))\r\nconst WizardNodeDetails = React.lazy(() => import('./views/details/containers/WizardNodeDetails'))\r\n\r\nexport const WizardNodeRoutes: Array<AppRouteProps> = [\r\n    { \r\n        path: 'wizard-node', \r\n        title: 'Bo.WizardNode.title',\r\n        element: <WizardNode />,\r\n        children: [\r\n            ...WizardNodeEditRoute\r\n        ]\r\n    },\r\n    {\r\n        path: 'wizard-node', \r\n        title: 'Bo.WizardNode.title',\r\n        children: WizardNodeDetailsRoute\r\n    }\r\n]\r\n", "import { AppRouteProps } from '@mzara/component'\r\nimport React from 'react'\r\n\r\nconst WizardEdit = React.lazy(() => import('./containers/WizardEdit'))\r\n\r\nexport const WizardNodeEditRoute: Array<AppRouteProps> = [\r\n    {\r\n        path: 'create',\r\n        title: 'Bo.Wizard.Create.title',\r\n        element: <WizardEdit />,\r\n    },\r\n    {\r\n        path: 'edit/:id',\r\n        title: 'Bo.Wizard.Edit.title',\r\n        element: <WizardEdit />,\r\n    },\r\n    {\r\n        path: 'clone/:id',\r\n        title: 'Bo.Wizard.Clone.title',\r\n        element: <WizardEdit clone />,\r\n    },\r\n]\r\n", "import { AppRouteProps } from '@mzara/component'\r\nimport React from 'react'\r\nimport WizardNodeParams from './views/params/containers/WizardNodeParams'\r\n\r\nconst WizardNodeDetails = React.lazy(() => import('./containers/WizardNodeDetails'))\r\nconst WizardNodeDetailsAbout = React.lazy(() => import('./views/about/containers/WizardNodeDetailsAbout'))\r\nconst WizardNodeDetailsDesigner = React.lazy(() => import('./views/designer/containers/WizardNodeDetailsDesigner'))\r\nconst WizardNodeDetailsTesting = React.lazy(() => import('./views/test/containers/WizardNodeDetailsTesting'))\r\n\r\n\r\nexport const WizardNodeDetailsRoute: Array<AppRouteProps> = [\r\n    {\r\n        path: ':id', \r\n        title: '',\r\n        element: <WizardNodeDetails />,\r\n        children: [\r\n            {\r\n                path: 'about', \r\n                title: 'std_about',\r\n                element: <WizardNodeDetailsAbout />,\r\n            },\r\n            {\r\n                path: 'designer', \r\n                title: 'std_designer',\r\n                element: <WizardNodeDetailsDesigner />,\r\n            },\r\n            {\r\n                path: 'test', \r\n                title: 'std_test',\r\n                element: <WizardNodeDetailsTesting />,\r\n            },\r\n            \r\n            {\r\n                path: 'params', \r\n                title: 'std_params',\r\n                element: <WizardNodeParams />,\r\n            },\r\n        ]\r\n    }\r\n]\r\n", "import { useParams } from \"react-router-dom\"\r\nimport _ from 'lodash'\r\nimport { Wizard } from \"@mzara/wizard\"\r\n\r\nconst WizardNodeParams = () => {\r\n\r\n    const { id } = useParams()\r\n\r\n    return (\r\n        <Wizard\r\n            wizardKey=\"Generic.Wizard.Node.Params.Wizard\"\r\n            id={parseInt(id)}\r\n            layout=\"PARAMS\"\r\n            />\r\n    )\r\n}\r\n\r\nexport default WizardNodeParams\r\n"],
  "mappings": ";;;;AAAA,OAAO;AACP,OAAO;;;ACAP,OAAOA,YAAW;;;ACAlB,OAAO,WAAW;AADlB;AAGA,IAAM,aAAa,MAAM,KAAK,MAAM,OAAO,2BAA0B;AAE9D,IAAM,sBAA4C;AAAA,EACrD;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,oBAAC,cAAW;AAAA,EACzB;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,oBAAC,cAAW;AAAA,EACzB;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,oBAAC;AAAA,MAAW,OAAK;AAAA,KAAC;AAAA,EAC/B;AACJ;;;ACpBA,OAAOC,YAAW;;;ACDlB,SAAS,iBAAiB;AAE1B,SAAS,cAAc;AAFvB,gBAAAC,YAAA;AAIA,IAAM,mBAAmB,MAAM;AAE3B,QAAM,EAAE,GAAG,IAAI,UAAU;AAEzB,SACI,gBAAAA,KAAC;AAAA,IACG,WAAU;AAAA,IACV,IAAI,SAAS,EAAE;AAAA,IACf,QAAO;AAAA,GACP;AAEZ;AAEA,IAAO,2BAAQ;;;ADjBf,gBAAAC,YAAA;AAIA,IAAM,oBAAoBC,OAAM,KAAK,MAAM,OAAO,kCAAiC;AACnF,IAAM,yBAAyBA,OAAM,KAAK,MAAM,OAAO,uCAAkD;AACzG,IAAM,4BAA4BA,OAAM,KAAK,MAAM,OAAO,0CAAwD;AAClH,IAAM,2BAA2BA,OAAM,KAAK,MAAM,OAAO,yCAAmD;AAGrG,IAAM,yBAA+C;AAAA,EACxD;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAD,KAAC,qBAAkB;AAAA,IAC5B,UAAU;AAAA,MACN;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,gBAAAA,KAAC,0BAAuB;AAAA,MACrC;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,gBAAAA,KAAC,6BAA0B;AAAA,MACxC;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,gBAAAA,KAAC,4BAAyB;AAAA,MACvC;AAAA,MAEA;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,gBAAAA,KAAC,4BAAiB;AAAA,MAC/B;AAAA,IACJ;AAAA,EACJ;AACJ;;;AFvCA,gBAAAE,YAAA;AAKA,IAAM,aAAaC,OAAM,KAAK,MAAM,OAAO,2BAA0B;AACrE,IAAMC,qBAAoBD,OAAM,KAAK,MAAM,OAAO,kCAA+C;AAE1F,IAAM,mBAAyC;AAAA,EAClD;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAD,KAAC,cAAW;AAAA,IACrB,UAAU;AAAA,MACN,GAAG;AAAA,IACP;AAAA,EACJ;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAU;AAAA,EACd;AACJ;",
  "names": ["React", "React", "jsx", "jsx", "React", "jsx", "React", "WizardNodeDetails"]
}
