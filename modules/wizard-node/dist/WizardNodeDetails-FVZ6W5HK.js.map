{
  "version": 3,
  "sources": ["../src/views/details/containers/WizardNodeDetails.tsx", "../src/hooks/useWizardNodeDetailsBreadCrumb.ts", "../src/views/details/hooks/useWizardNodeDetailsMenu.ts"],
  "sourcesContent": ["import { useEffect, useMemo, useState } from 'react'\r\nimport { Box, BreadCrumb, ButtonSubmit, ControlListProps, GenericSuspense, Menu, RightSidebar, useGraphqlMutation, useTranslation, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\nimport { Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { useWizardNodeDetailsQuery } from 'views/details/hooks/useWizardNodeDetailsQuery'\r\nimport { useWizardNodeDetailsBreadCrumb } from 'hooks/useWizardNodeDetailsBreadCrumb'\r\nimport { ControlListDesigner, ControlListDesignerProperties, useControlListDesignerValueState } from '@mzara/control-list-designer'\r\nimport { WIZARD_NODE_MUTATION } from 'views/details/views/designer/queries/WizardNodeMutation'\r\nimport { TWizardNode } from '@mzara/graphql'\r\nimport _ from 'lodash'\r\nimport { useWizardNodeDetailsMenu } from '../hooks/useWizardNodeDetailsMenu'\r\n\r\nconst WizardNodeDetails = () => {\r\n\r\n    const [\r\n        SAVE,\r\n        PROPERTIES\r\n    ] = useTranslations(i18n)\r\n    const t = useTranslation()\r\n    const { id } = useParams()\r\n    const { data } = useWizardNodeDetailsQuery(parseInt(id), true)\r\n    const breadCrumb = useWizardNodeDetailsBreadCrumb(data.title)\r\n    const menuItems = useWizardNodeDetailsMenu(id)\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const translatedRoute = useTranslationRoute()\r\n    const [, , , , tab] = location.pathname.split('/')\r\n\r\n    useEffect(() => {\r\n        if (!tab) {\r\n            navigate(translatedRoute(`wizard-node/${id}/about`), { replace: true })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex flex-row w-full\">\r\n            <div className=\"flex flex-col gap-5 flex-1\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                        <h4 className=\"font-semibold\">{t(data.title)}</h4>\r\n                        <h6>{data.nodeKey}</h6>\r\n                    </div>\r\n                </div>\r\n                <BreadCrumb items={breadCrumb.reverse()} />\r\n                <Box className='box-padding-0'>\r\n                    <Menu\r\n                        items={menuItems}\r\n                        type=\"HORIZONTAL\"\r\n                        activeFn={(menu) => menu.ke === tab}\r\n                        \r\n                    />\r\n                </Box>\r\n                <div>\r\n                    <GenericSuspense>\r\n                        <Outlet />\r\n                    </GenericSuspense>\r\n                </div>\r\n            </div>\r\n            <RightSidebar />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst i18n = [\r\n    'std_save',\r\n    'Bo.WizardNode.Details.ControlDesigner.Properties.title',\r\n]\r\n\r\nexport default WizardNodeDetails\r\n", "import { BreadCrumbItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\n\r\nexport const useWizardNodeDetailsBreadCrumb = (title: string): Array<BreadCrumbItemProps> => {\r\n\r\n\tconst [\r\n\t\tHOME,\r\n\t\tTITLE\r\n\t] = useTranslations(i18n)\r\n\tconst url = useTranslationRoute()\r\n\t\r\n    return [\r\n\t\t{\r\n\t\t\tlabel: HOME,\r\n\t\t\tlink: url('')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: TITLE,\r\n\t\t\tlink: url('wizard-node')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: title,\r\n\t\t\tclassName: 'active',\r\n\t\t}\r\n\t]\r\n}\r\n\r\nconst i18n = [\r\n\t'std_home',\r\n\t'Bo.WizardNode.title'\r\n]\r\n", "import { MenuItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\nimport { useMemo } from \"react\"\r\n\r\nexport const useWizardNodeDetailsMenu = (id: string) => {\r\n    \r\n    const [\r\n        ABOUT,\r\n        DESIGNER,\r\n        TEST,\r\n        PARAMS\r\n    ] = useTranslations(i18n)\r\n    \r\n    const translatedRoute = useTranslationRoute()\r\n\r\n    return useMemo((): Array<MenuItemProps> => ([\r\n        {\r\n            ke: 'about',\r\n            label: ABOUT,\r\n            link: translatedRoute(`wizard-node/${id}/about`)\r\n        },\r\n        {\r\n            ke: 'designer',\r\n            label: DESIGNER,\r\n            link: translatedRoute(`wizard-node/${id}/designer`)\r\n        },\r\n        {\r\n            ke: 'test',\r\n            label: TEST,\r\n            link: translatedRoute(`wizard-node/${id}/test`)\r\n        },\r\n        {\r\n            ke: 'params',\r\n            label: PARAMS,\r\n            link: translatedRoute(`wizard-node/${id}/params`)\r\n        },\r\n    ]), [ABOUT])\r\n}\r\n\r\nconst i18n = [\r\n    'std_about',\r\n    'std_designer',\r\n    'std_test',\r\n    'std_params',\r\n]\r\n"],
  "mappings": "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",
  "names": ["useTranslationRoute", "useTranslations", "useTranslationRoute", "useTranslations", "i18n", "useTranslations", "i18n", "useTranslationRoute"]
}
