{
  "version": 3,
  "sources": ["../src/index.tsx", "../src/WizardRoutes.tsx", "../src/containers/WizardDetails.tsx", "../src/hooks/useWizardDetailsBreadCrumb.ts", "../src/hooks/useWizardDetailsMenu.ts", "../src/view/WizardDetailsViewRoutes.tsx"],
  "sourcesContent": ["import '@mzara/flow/dist/index.css'\r\nimport '@mzara/flow/dist/main.css'\r\n\r\nexport * from './WizardRoutes'\r\nexport * from './components/Wizard'\r\n\r\n", "import { AppRouteProps } from '@mzara/component'\r\nimport React from 'react'\r\nimport WizardDetails from 'containers/WizardDetails'\r\nimport { WizardDetailsViewRoutes } from 'view/WizardDetailsViewRoutes'\r\n\r\nconst Translation = React.lazy(() => import('./containers/Wizard'))\r\nconst WizardEdit = React.lazy(() => import('./containers/WizardEdit'))\r\n\r\nexport const WizardRoutes: Array<AppRouteProps> = [\r\n    { \r\n        path: 'wizard', \r\n        title: 'Bo.Wizard.title',\r\n        element: <Translation />,\r\n        children: [\r\n            {\r\n                path: 'create',\r\n                title: 'Bo.Wizard.Create.title',\r\n                element: <WizardEdit />,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'wizard/:id', \r\n        title: 'Bo.Wizard.title',\r\n        element: <WizardDetails />,\r\n        children: [\r\n            ...WizardDetailsViewRoutes\r\n        ]\r\n    },\r\n]\r\n", "import { useEffect, useState } from 'react'\r\nimport { Box, BreadCrumb, GenericSuspense, Menu, RightSidebar, useTranslations } from \"@mzara/component\"\r\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\"\r\nimport { useWizardDetailsBreadCrumb } from \"hooks/useWizardDetailsBreadCrumb\"\r\nimport { useWizardDetailsQuery } from \"hooks/useWizardDetailsQuery\"\r\nimport { useWizardDetailsMenu } from \"hooks/useWizardDetailsMenu\"\r\nimport _ from 'lodash'\r\n\r\nconst WizardDetails = () => {\r\n\r\n    const [\r\n        SAVE\r\n    ] = useTranslations(i18n)\r\n    const { id } = useParams()\r\n    const [, , , ,tab] = location.pathname.split(\"/\");\r\n    const { data } = useWizardDetailsQuery(parseInt(id), true)\r\n    const breadCrumb = useWizardDetailsBreadCrumb(data.title)\r\n    const menus = useWizardDetailsMenu(parseInt(id))\r\n    const navigate = useNavigate()\r\n    \r\n    useEffect(() => {\r\n        if (!menus.some((item) => item.ke === tab)) {\r\n            navigate(menus[0].link, { replace: true })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex flex-row w-full gap-4\">\r\n            <div className=\"flex flex-col gap-5 flex-1\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                        <h4 className=\"font-semibold\">{data.title}</h4>\r\n                        <h6>{data.wizardKey}</h6>\r\n                    </div>\r\n                </div>\r\n                <BreadCrumb items={breadCrumb} />\r\n\r\n                <Box className=' box-p-0'>\r\n                    <Menu type=\"HORIZONTAL\" className='menuPublication' items={menus} activeFn={(menu) => menu.ke === tab} />\r\n                </Box>\r\n\r\n                <GenericSuspense>\r\n                    <Outlet />\r\n                </GenericSuspense>\r\n            </div>\r\n            <RightSidebar>\r\n\r\n            </RightSidebar>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst i18n = [\r\n    'std_save'\r\n]\r\n\r\nexport default WizardDetails\r\n", "import { BreadCrumbItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\n\r\nexport const useWizardDetailsBreadCrumb = (title: string): Array<BreadCrumbItemProps> => {\r\n\r\n\tconst [\r\n\t\tHOME,\r\n\t\tTITLE\r\n\t] = useTranslations(i18n)\r\n\tconst url = useTranslationRoute()\r\n\t\r\n    return [\r\n\t\t{\r\n\t\t\tlabel: HOME,\r\n\t\t\tlink: url('')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: TITLE,\r\n\t\t\tlink: url('wizard')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: title,\r\n\t\t\tclassName: 'active',\r\n\t\t}\r\n\t].reverse()\r\n}\r\n\r\nconst i18n = [\r\n\t'std_home',\r\n\t'Bo.Wizard.title'\r\n]\r\n", "import { MenuItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\nimport { useMemo } from \"react\"\r\n\r\nexport const useWizardDetailsMenu = (id: number) => {\r\n    \r\n    const [\r\n        ABOUT,\r\n        DESIGNER,\r\n        PARAMS\r\n    ] = useTranslations(i18n)\r\n    \r\n    const translatedRoute = useTranslationRoute()\r\n\r\n    return useMemo((): Array<MenuItemProps> => ([\r\n        {\r\n            ke: 'about',\r\n            label: ABOUT,\r\n            link: translatedRoute(`wizard/${id}/about`),\r\n            \r\n        },\r\n        {\r\n            ke: 'designer',\r\n            label: DESIGNER,\r\n            link: translatedRoute(`wizard/${id}/designer`),\r\n        },\r\n        {\r\n            ke: 'params',\r\n            label: PARAMS,\r\n            link: translatedRoute(`wizard/${id}/params`),\r\n        },\r\n    ]), [ABOUT])\r\n}\r\n\r\nconst i18n = [\r\n    'std_about',\r\n    'std_designer',\r\n    'std_params'\r\n]\r\n", "import { AppRouteProps } from '@mzara/component'\r\nimport React from 'react'\r\n\r\nconst WizardDetailsAbout = React.lazy(() => import('./about/containers/WizardDetailsAbout'))\r\nconst WizardDetailsDesigner = React.lazy(() => import('./designer/containers/WizardDetailsDesigner'))\r\nconst WizardDetailsParams = React.lazy(() => import('./params/containers/WizardDetailsParams'))\r\n\r\nexport const WizardDetailsViewRoutes: Array<AppRouteProps> = [\r\n    { \r\n        path: 'about', \r\n        title: 'Bo.Wizard.About.title',\r\n        element: <WizardDetailsAbout />,\r\n    },\r\n    { \r\n        path: 'designer', \r\n        title: 'Bo.Wizard.Designer.title',\r\n        element: <WizardDetailsDesigner />,\r\n    },\r\n    { \r\n        path: 'params', \r\n        title: 'Bo.Wizard.Params.title',\r\n        element: <WizardDetailsParams />,\r\n    },\r\n]\r\n"],
  "mappings": ";;;;;;;;;;;AAAA,OAAO;AACP,OAAO;;;ACAP,OAAOA,YAAW;;;ACDlB,SAAS,iBAA2B;AACpC,SAAS,KAAK,YAAY,iBAAiB,MAAM,cAAc,mBAAAC,wBAAuB;AACtF,SAAS,QAAQ,aAAa,iBAAiB;;;ACF/C,SAA8B,qBAAqB,uBAAuB;AAEnE,IAAM,6BAA6B,CAAC,UAA8C;AAExF,QAAM;AAAA,IACL;AAAA,IACA;AAAA,EACD,IAAI,gBAAgB,IAAI;AACxB,QAAM,MAAM,oBAAoB;AAE7B,SAAO;AAAA,IACT;AAAA,MACC,OAAO;AAAA,MACP,MAAM,IAAI,EAAE;AAAA,IACb;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,MAAM,IAAI,QAAQ;AAAA,IACnB;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,WAAW;AAAA,IACZ;AAAA,EACD,EAAE,QAAQ;AACX;AAEA,IAAM,OAAO;AAAA,EACZ;AAAA,EACA;AACD;;;AC7BA,SAAwB,uBAAAC,sBAAqB,mBAAAC,wBAAuB;AACpE,SAAS,eAAe;AAEjB,IAAM,uBAAuB,CAAC,OAAe;AAEhD,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAIA,iBAAgBC,KAAI;AAExB,QAAM,kBAAkBF,qBAAoB;AAE5C,SAAO,QAAQ,MAA6B;AAAA,IACxC;AAAA,MACI,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAgB,UAAU,UAAU;AAAA,IAE9C;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAgB,UAAU,aAAa;AAAA,IACjD;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAgB,UAAU,WAAW;AAAA,IAC/C;AAAA,EACJ,GAAI,CAAC,KAAK,CAAC;AACf;AAEA,IAAME,QAAO;AAAA,EACT;AAAA,EACA;AAAA,EACA;AACJ;;;AFrCA;AAQA,IAAM,gBAAgB,MAAM;AAExB,QAAM;AAAA,IACF;AAAA,EACJ,IAAIC,iBAAgBC,KAAI;AACxB,QAAM,EAAE,GAAG,IAAI,UAAU;AACzB,QAAM,CAAC,EAAE,EAAE,EAAE,EAAC,GAAG,IAAI,SAAS,SAAS,MAAM,GAAG;AAChD,QAAM,EAAE,KAAK,IAAI,sBAAsB,SAAS,EAAE,GAAG,IAAI;AACzD,QAAM,aAAa,2BAA2B,KAAK,KAAK;AACxD,QAAM,QAAQ,qBAAqB,SAAS,EAAE,CAAC;AAC/C,QAAM,WAAW,YAAY;AAE7B,YAAU,MAAM;AACZ,QAAI,CAAC,MAAM,KAAK,CAAC,SAAS,KAAK,OAAO,GAAG,GAAG;AACxC,eAAS,MAAM,GAAG,MAAM,EAAE,SAAS,KAAK,CAAC;AAAA,IAC7C;AAAA,EACJ,GAAG,CAAC,CAAC;AAEL,SACI,qBAAC;AAAA,IAAI,WAAU;AAAA,IACX;AAAA,2BAAC;AAAA,QAAI,WAAU;AAAA,QACX;AAAA,8BAAC;AAAA,YAAI,WAAU;AAAA,YACX,+BAAC;AAAA,cACG;AAAA,oCAAC;AAAA,kBAAG,WAAU;AAAA,kBAAiB,eAAK;AAAA,iBAAM;AAAA,gBAC1C,oBAAC;AAAA,kBAAI,eAAK;AAAA,iBAAU;AAAA;AAAA,aACxB;AAAA,WACJ;AAAA,UACA,oBAAC;AAAA,YAAW,OAAO;AAAA,WAAY;AAAA,UAE/B,oBAAC;AAAA,YAAI,WAAU;AAAA,YACX,8BAAC;AAAA,cAAK,MAAK;AAAA,cAAa,WAAU;AAAA,cAAkB,OAAO;AAAA,cAAO,UAAU,CAAC,SAAS,KAAK,OAAO;AAAA,aAAK;AAAA,WAC3G;AAAA,UAEA,oBAAC;AAAA,YACG,8BAAC,UAAO;AAAA,WACZ;AAAA;AAAA,OACJ;AAAA,MACA,oBAAC,gBAED;AAAA;AAAA,GACJ;AAER;AAEA,IAAMA,QAAO;AAAA,EACT;AACJ;AAEA,IAAO,wBAAQ;;;AGvDf,OAAO,WAAW;AADlB,gBAAAC,YAAA;AAGA,IAAM,qBAAqB,MAAM,KAAK,MAAM,OAAO,mCAAwC;AAC3F,IAAM,wBAAwB,MAAM,KAAK,MAAM,OAAO,sCAA8C;AACpG,IAAM,sBAAsB,MAAM,KAAK,MAAM,OAAO,oCAA0C;AAEvF,IAAM,0BAAgD;AAAA,EACzD;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAA,KAAC,sBAAmB;AAAA,EACjC;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAA,KAAC,yBAAsB;AAAA,EACpC;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAA,KAAC,uBAAoB;AAAA,EAClC;AACJ;;;AJvBA,gBAAAC,YAAA;AAKA,IAAM,cAAcC,OAAM,KAAK,MAAM,OAAO,uBAAsB;AAClE,IAAM,aAAaA,OAAM,KAAK,MAAM,OAAO,2BAA0B;AAE9D,IAAM,eAAqC;AAAA,EAC9C;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAD,KAAC,eAAY;AAAA,IACtB,UAAU;AAAA,MACN;AAAA,QACI,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,gBAAAA,KAAC,cAAW;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA;AAAA,IACI,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS,gBAAAA,KAAC,yBAAc;AAAA,IACxB,UAAU;AAAA,MACN,GAAG;AAAA,IACP;AAAA,EACJ;AACJ;",
  "names": ["React", "useTranslations", "useTranslationRoute", "useTranslations", "i18n", "useTranslations", "i18n", "jsx", "jsx", "React"]
}
