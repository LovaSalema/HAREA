{
  "version": 3,
  "sources": ["../src/views/organisation/hooks/useUserOrganisationRoleFormValue.ts"],
  "sourcesContent": ["\r\n\r\nimport { ControlListProps, useRuntimeEnv, useTranslations } from \"@mzara/component\";\r\nimport { TUserOrganisation } from \"@mzara/graphql\";\r\nimport { useMemo } from \"react\";\r\nimport { useUserOrganisationDetailsQuery } from \"./useUserOrganisationDetailsQuery\";\r\n\r\nexport const useUserOrganisationRoleFormValue = (id: number) => {\r\n\r\n    const { runtimeEnv } = useRuntimeEnv()\r\n    const { data } = useUserOrganisationDetailsQuery(id, true)\r\n\r\n    const categories = useMemo(() => {\r\n        return data.roles.reduce<Array<string>>((all, item) => {\r\n            if (!all.some((item1) => item1 === item.descriptorKey)) {\r\n                all.push(item.descriptorKey)\r\n            }\r\n            return all\r\n        }, [])\r\n    }, [data])\r\n    \r\n    return useMemo(() => {\r\n        return {\r\n            id: data.id,\r\n            ...(categories.reduce((all, category) => {\r\n                all[category] = data.roles.map((item) => item.id)\r\n                return all\r\n            }, {}))\r\n        }\r\n    }, [categories])\r\n}\r\n"],
  "mappings": ";;;;;;;;;AAEA,SAA2B,qBAAsC;AAEjE,SAAS,eAAe;AAGjB,IAAM,mCAAmC,CAAC,OAAe;AAE5D,QAAM,EAAE,WAAW,IAAI,cAAc;AACrC,QAAM,EAAE,KAAK,IAAI,gCAAgC,IAAI,IAAI;AAEzD,QAAM,aAAa,QAAQ,MAAM;AAC7B,WAAO,KAAK,MAAM,OAAsB,CAAC,KAAK,SAAS;AACnD,UAAI,CAAC,IAAI,KAAK,CAAC,UAAU,UAAU,KAAK,aAAa,GAAG;AACpD,YAAI,KAAK,KAAK,aAAa;AAAA,MAC/B;AACA,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AAAA,EACT,GAAG,CAAC,IAAI,CAAC;AAET,SAAO,QAAQ,MAAM;AACjB,WAAO;AAAA,MACH,IAAI,KAAK;AAAA,OACL,WAAW,OAAO,CAAC,KAAK,aAAa;AACrC,UAAI,YAAY,KAAK,MAAM,IAAI,CAAC,SAAS,KAAK,EAAE;AAChD,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AAAA,EAEb,GAAG,CAAC,UAAU,CAAC;AACnB;",
  "names": []
}
