{
  "version": 3,
  "sources": ["../src/views/organisation/containers/UserOrganisationDetails.tsx", "../src/views/organisation/hooks/useUserOrganisationDetailsMenu.ts", "../src/views/organisation/hooks/useUserOrganisationDetailsBreadCrumb.ts"],
  "sourcesContent": ["import { useEffect } from 'react'\r\nimport { Box, BreadCrumb, Button, GenericSuspense, Menu, RightSidebar, useTranslations } from \"@mzara/component\"\r\nimport { Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { useUserOrganisationDetailsQuery } from \"views/organisation/hooks/useUserOrganisationDetailsQuery\"\r\nimport { useUserOrganisationDetailsMenu } from '../hooks/useUserOrganisationDetailsMenu'\r\nimport { useUserOrganisationDetailsBreadCrumb } from '../hooks/useUserOrganisationDetailsBreadCrumb'\r\n\r\nconst UserOrganisationDetails = () => {\r\n\r\n    const [\r\n        SAVE\r\n    ] = useTranslations(i18n)\r\n\r\n    const [, , , , , tab] = location.pathname.split(\"/\");\r\n    const { id } = useParams()\r\n    const { data } = useUserOrganisationDetailsQuery(parseInt(id), true)\r\n    const breadCrumb = useUserOrganisationDetailsBreadCrumb(data.designation)\r\n    const menus = useUserOrganisationDetailsMenu(parseInt(id))\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (!menus.some((item) => item.ke === tab)) {\r\n            navigate(menus[0].link)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex flex-row w-full\">\r\n            <div className=\"flex flex-col gap-5 flex-1\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <h4 className=\"font-semibold\">{data.designation}</h4>\r\n                </div>\r\n                <BreadCrumb items={breadCrumb.reverse()} />\r\n                <Menu type=\"HORIZONTAL\" className=\"menuPublication\" items={menus} activeFn={(menu) => menu.ke === tab} />\r\n                <GenericSuspense>\r\n                    <Outlet />\r\n                </GenericSuspense>\r\n            </div>\r\n            <RightSidebar />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst i18n = [\r\n    'std_save'\r\n]\r\n\r\nexport default UserOrganisationDetails\r\n", "import { MenuItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\nimport { useMemo } from \"react\"\r\nimport { useUserOrganisationDetailsQuery } from \"./useUserOrganisationDetailsQuery\"\r\n\r\nexport const useUserOrganisationDetailsMenu = (id: number) => {\r\n    \r\n    const [\r\n        ABOUT,\r\n        PARAMS,\r\n    ] = useTranslations(i18n)\r\n    \r\n    const { data } = useUserOrganisationDetailsQuery(id, true)\r\n    const translatedRoute = useTranslationRoute()\r\n\r\n    return useMemo((): Array<MenuItemProps> => ([\r\n        {\r\n            ke: 'about',\r\n            label: ABOUT,\r\n            link: translatedRoute(`user/organisation/${id}/about`)\r\n        },\r\n        {\r\n            ke: 'parameters',\r\n            label: PARAMS,\r\n            link: translatedRoute(`user/organisation/${id}/parameters`)\r\n        },\r\n    ]), [data])\r\n}\r\n\r\nconst i18n = [\r\n    'std_about',\r\n    'std_params',\r\n]\r\n", "import { BreadCrumbItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\n\r\nexport const useUserOrganisationDetailsBreadCrumb = (title: string): Array<BreadCrumbItemProps> => {\r\n\r\n\tconst [\r\n\t\tHOME,\r\n\t\tUSER,\r\n\t\tTITLE\r\n\t] = useTranslations(i18n)\r\n\tconst url = useTranslationRoute()\r\n\t\r\n    return [\r\n\t\t\r\n\t\t{\r\n\t\t\tlabel: HOME,\r\n\t\t\tlink: url('')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: USER,\r\n\t\t\tlink: url('/user')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: TITLE,\r\n\t\t\tclassName: 'active'\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: title,\r\n\t\t\tclassName: 'active',\r\n\t\t}\r\n\t]\r\n}\r\n\r\nconst i18n = [\r\n\t'std_home',\r\n\t'std_user',\r\n\t'Generic.UserOrganisation.title'\r\n]\r\n"],
  "mappings": ";;;;;;;AAAA,SAAS,iBAAiB;AAC1B,SAAc,YAAoB,iBAAiB,MAAM,cAAc,mBAAAA,wBAAuB;AAC9F,SAAS,QAAqB,aAAa,iBAAiB;;;ACF5D,SAAwB,qBAAqB,uBAAuB;AACpE,SAAS,eAAe;AAGjB,IAAM,iCAAiC,CAAC,OAAe;AAE1D,QAAM;AAAA,IACF;AAAA,IACA;AAAA,EACJ,IAAI,gBAAgB,IAAI;AAExB,QAAM,EAAE,KAAK,IAAI,gCAAgC,IAAI,IAAI;AACzD,QAAM,kBAAkB,oBAAoB;AAE5C,SAAO,QAAQ,MAA6B;AAAA,IACxC;AAAA,MACI,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAgB,qBAAqB,UAAU;AAAA,IACzD;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAgB,qBAAqB,eAAe;AAAA,IAC9D;AAAA,EACJ,GAAI,CAAC,IAAI,CAAC;AACd;AAEA,IAAM,OAAO;AAAA,EACT;AAAA,EACA;AACJ;;;AC/BA,SAA8B,uBAAAC,sBAAqB,mBAAAC,wBAAuB;AAEnE,IAAM,uCAAuC,CAAC,UAA8C;AAElG,QAAM;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACD,IAAIA,iBAAgBC,KAAI;AACxB,QAAM,MAAMF,qBAAoB;AAE7B,SAAO;AAAA,IAET;AAAA,MACC,OAAO;AAAA,MACP,MAAM,IAAI,EAAE;AAAA,IACb;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,MAAM,IAAI,OAAO;AAAA,IAClB;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,WAAW;AAAA,IACZ;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,WAAW;AAAA,IACZ;AAAA,EACD;AACD;AAEA,IAAME,QAAO;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AACD;;;AFpCA;AAOA,IAAM,0BAA0B,MAAM;AAElC,QAAM;AAAA,IACF;AAAA,EACJ,IAAIC,iBAAgBC,KAAI;AAExB,QAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,SAAS,SAAS,MAAM,GAAG;AACnD,QAAM,EAAE,GAAG,IAAI,UAAU;AACzB,QAAM,EAAE,KAAK,IAAI,gCAAgC,SAAS,EAAE,GAAG,IAAI;AACnE,QAAM,aAAa,qCAAqC,KAAK,WAAW;AACxE,QAAM,QAAQ,+BAA+B,SAAS,EAAE,CAAC;AACzD,QAAM,WAAW,YAAY;AAE7B,YAAU,MAAM;AACZ,QAAI,CAAC,MAAM,KAAK,CAAC,SAAS,KAAK,OAAO,GAAG,GAAG;AACxC,eAAS,MAAM,GAAG,IAAI;AAAA,IAC1B;AAAA,EACJ,GAAG,CAAC,CAAC;AAEL,SACI,qBAAC;AAAA,IAAI,WAAU;AAAA,IACX;AAAA,2BAAC;AAAA,QAAI,WAAU;AAAA,QACX;AAAA,8BAAC;AAAA,YAAI,WAAU;AAAA,YACX,8BAAC;AAAA,cAAG,WAAU;AAAA,cAAiB,eAAK;AAAA,aAAY;AAAA,WACpD;AAAA,UACA,oBAAC;AAAA,YAAW,OAAO,WAAW,QAAQ;AAAA,WAAG;AAAA,UACzC,oBAAC;AAAA,YAAK,MAAK;AAAA,YAAa,WAAU;AAAA,YAAkB,OAAO;AAAA,YAAO,UAAU,CAAC,SAAS,KAAK,OAAO;AAAA,WAAK;AAAA,UACvG,oBAAC;AAAA,YACG,8BAAC,UAAO;AAAA,WACZ;AAAA;AAAA,OACJ;AAAA,MACA,oBAAC,gBAAa;AAAA;AAAA,GAGlB;AAER;AAEA,IAAMA,QAAO;AAAA,EACT;AACJ;AAEA,IAAO,kCAAQ;",
  "names": ["useTranslations", "useTranslationRoute", "useTranslations", "i18n", "useTranslations", "i18n"]
}
