{
  "version": 3,
  "sources": ["../src/containers/Translation.tsx", "../src/components/TranslationFilter.tsx", "../src/hooks/useTranslationListFilter.ts", "../src/hooks/useTranslationListSort.ts", "../src/hooks/useTranslationBreadCrumb.ts", "../src/hooks/useTranslationListMenu.ts", "../src/queries/TranslationsQuery.ts"],
  "sourcesContent": ["import { BreadCrumb, Button, useTranslations, List, useCdnFlagUrl, DateSpan, useTranslationRoute, useTranslation, useUrlParamsValue, useUrlParamsEncode, MenuItemProps, Dialog, useGraphqlDelete, useListGraphqlQuery, RightSidebar, GenericSuspense } from \"@mzara/component\"\r\nimport { Link, Outlet } from \"react-router-dom\"\r\nimport { TranslationFilter } from \"../components/TranslationFilter\"\r\nimport { useTranslationListSort } from \"../hooks/useTranslationListSort\"\r\nimport { useTranslationBreadCrumb } from \"../hooks/useTranslationBreadCrumb\"\r\nimport { useTranslationListMenu } from \"../hooks/useTranslationListMenu\"\r\nimport { TranslationsQuery } from \"../queries/TranslationsQuery\"\r\nimport { TTranslation } from \"@mzara/graphql\"\r\nimport { useState } from \"react\"\r\n\r\nconst Translation = () => {\r\n\r\n    const breadCrumb = useTranslationBreadCrumb()\r\n    const menus = useTranslationListMenu()\r\n    const [\r\n        ADD,\r\n        CREATED_AT,\r\n        UPDATED_AT,\r\n        CONFIRMATION,\r\n        OK,\r\n        CANCEL,\r\n        APP,\r\n        QUALITY,\r\n        TRANSLATION\r\n    ] = useTranslations(i18n)\r\n    const t = useTranslation()\r\n    const cdn = useCdnFlagUrl()\r\n    const sortItems = useTranslationListSort()\r\n    const translatedRoute = useTranslationRoute()\r\n    const urlParams = useUrlParamsValue()\r\n    const encodeUrl = useUrlParamsEncode()\r\n    const deleteMutation = useGraphqlDelete('translation')\r\n    const [deleteItems, setDeleteItems] = useState<Array<number>>([])\r\n    const { invalidateQuery } = useListGraphqlQuery(TRANSLATION_LIST_ID)\r\n\r\n    const handleMenuClick = (row: TTranslation, menu: MenuItemProps) => {\r\n        if (menu.ke === 'delete') {\r\n            setDeleteItems([row.id])\r\n        }\r\n    }\r\n\r\n    const handleDeleteConfirmed = () => {\r\n        deleteMutation.mutate({\r\n            ids: deleteItems\r\n        }, {\r\n            onSuccess: () => {\r\n                invalidateQuery()\r\n                setDeleteItems([])\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-row w-full\">\r\n            <div className=\"flex flex-col gap-5 flex-1\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <h4 className=\"font-semibold\">{TRANSLATION}</h4>\r\n                    <Link to={translatedRoute(`translation/create?${encodeUrl(urlParams)}`)}>\r\n                        <Button\r\n                            startIcon=\"fa-solid fa-plus\"\r\n                            className='btn btn-primary'\r\n                            label={ADD}\r\n                        />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"flex items-center w-full gap-2 h-14\">\r\n                    <BreadCrumb items={breadCrumb} />\r\n                </div>\r\n\r\n                <div className=\"flex w-full\">\r\n                    <List\r\n                        id={TRANSLATION_LIST_ID}\r\n                        GQLRequest={TranslationsQuery}\r\n                        menus={menus}\r\n                        sort={{ items: sortItems }}\r\n                        separator\r\n                        defaultFilter={{\r\n                            pageSize: 50,\r\n                            page: 0,\r\n                            sort: [{ sort: 'DESC', value: 'updatedAt' }]\r\n                        }}\r\n                        onMenuClick={handleMenuClick}\r\n                        onRenderRow={(row: TTranslation) => (\r\n                            <div className=\"flex flex-col gap-5\">\r\n                                <div className=\"flex flex-col\">\r\n                                    <Link to={translatedRoute(`translation/edit/${row.id}?${encodeUrl(urlParams)}`)}>\r\n                                        <h5><b>{row.translationKey}</b></h5>\r\n                                    </Link>\r\n                                    <p>{row.value}</p>\r\n                                </div>\r\n                                <ul className=\"flex items-center sm:gap-10 gap-4\">\r\n                                    <li className=\"flex items-center gap-1\">\r\n                                        <img\r\n                                            src={cdn(row.language?.value)}\r\n                                            title={t(row.language?.translationKey as any || '')}\r\n                                            alt={t(row.language?.translationKey as any || '')}\r\n                                            className=\"w-4 h-4\" />\r\n                                        <span className=\"text-[12px]\">{t(row.language.translationKey as any)}</span>\r\n                                    </li>\r\n                                    <li className=\"flex items-center gap-1\">\r\n                                        <i title={UPDATED_AT} className=\"fa-solid fa-clock text-[#6C6868]\"></i>\r\n                                        <span className=\"text-[12px]\"><DateSpan value={row.updatedAt!} /></span>\r\n                                    </li>\r\n                                    <li className=\"flex items-center gap-1\">\r\n                                        <i title={APP} className=\"fa-solid fa-desktop text-[#6C6868]\"></i>\r\n                                        <span className=\"text-[12px]\">{t(row.appName.translationKey as any)}</span>\r\n                                    </li>\r\n                                    <li className=\"flex items-center gap-1\">\r\n                                        <i title={QUALITY} className=\"fa-solid fa-vials text-[#6C6868]\"></i>\r\n                                        <span className=\"text-[12px]\">{t(row.quality.translationKey as any)}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <RightSidebar>\r\n                <TranslationFilter />\r\n            </RightSidebar>\r\n            <GenericSuspense>\r\n                <Outlet />\r\n            </GenericSuspense>\r\n\r\n            {\r\n                deleteItems.length > 0 &&\r\n                <Dialog\r\n                    open={deleteItems.length > 0}\r\n                    onDismiss={() => setDeleteItems([])}\r\n                    onCancel={() => setDeleteItems([])}\r\n                    onConfirm={() => handleDeleteConfirmed()}\r\n                    title={CONFIRMATION}\r\n                    btnOk={{ label: OK, isSubmit: deleteMutation.isLoading }}\r\n                    btnCancel={{ label: CANCEL }}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TRANSLATION_LIST_ID = 'Translation.List'\r\n\r\nconst i18n = [\r\n    'std_add',\r\n    'std_created_at',\r\n    'std_updated_at',\r\n    'std_confirmation',\r\n    'std_ok',\r\n    'std_cancel',\r\n    'Generic.txt.translate.form.app.label',\r\n    'Generic.txt.translate.form.quality.label',\r\n    'Generic.txt.traduction.label'\r\n]\r\n\r\nexport default Translation\r\n", "import { Box, ControlList, useListFilterState, useTranslations } from \"@mzara/component\"\r\nimport _ from \"lodash\"\r\nimport { TRANSLATION_LIST_ID } from \"../containers/Translation\"\r\nimport { useTranslationListFilter } from \"../hooks/useTranslationListFilter\"\r\n\r\nexport const TranslationFilter = () => {\r\n\r\n    const control = useTranslationListFilter()\r\n    const { filter, setFilter, resetGlobalFilterValue } = useListFilterState(TRANSLATION_LIST_ID)\r\n    const [\r\n        FILTER,\r\n    ] = useTranslations(i18n)\r\n\r\n    return (\r\n        <Box className=\"box-transparent box-shadow-none box-p-0\" title={FILTER} icon=\"fa-solid fa-filter\">\r\n            <ControlList\r\n                {...control}\r\n                value={{\r\n                    ...filter?.data,\r\n                    language: !_.isEmpty(filter?.data?.language.id_among) ? filter?.data?.language.id_among?.map((item) => ({ id: item })) : undefined,\r\n                    appName: !_.isEmpty(filter?.data?.appName.id_among) ? filter?.data?.appName.id_among?.map((item) => ({ id: item })) : undefined,\r\n                    quality: !_.isEmpty(filter?.data?.quality.id_among) ? filter?.data?.quality.id_among?.map((item) => ({ id: item })) : undefined,\r\n                }}\r\n                onChange={(value) => setFilter((v: any) => ({ \r\n                    ...v, \r\n                    page: 0, \r\n                    data: { \r\n                        ...v.data, \r\n                        ...value,\r\n                        language: {\r\n                            id_among: value.language?.map((item) => item.id)\r\n                        },\r\n                        appName: {\r\n                            id_among: value.appName?.map((item) => item.id)\r\n                        },\r\n                        quality: {\r\n                            id_among: value.quality?.map((item) => item.id)\r\n                        }\r\n                    }\r\n\r\n                }))}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst i18n = [\r\n    'std_filter'\r\n]\r\n", "import { ControlListProps, useTranslations } from \"@mzara/component\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport const useTranslationListFilter = () => {\r\n\r\n    const [\r\n        KE_LABEL,\r\n        KE_DESCRIPTION,\r\n        VAL_LABEL,\r\n        VAL_DESCRIPTION,\r\n        ZONE_LABEL,\r\n        ZONE_DESCRIPTION,\r\n        APP_LABEL,\r\n        APP_DESCRIPTION,\r\n        COMMENTS_LABEL,\r\n        COMMENTS_DESCRIPTION,\r\n        QUALITY_LABEL,\r\n        QUALITY_DESCRIPTION\r\n    ] = useTranslations(i18n);\r\n\r\n    return useMemo((): ControlListProps => {\r\n        return {\r\n            data: {\r\n                forms: [\r\n                    {\r\n                        type: 'text',\r\n                        name: 'translationKey_like',\r\n                        className: '',\r\n                        label: KE_LABEL,\r\n                        placeholder: KE_DESCRIPTION\r\n                    },\r\n                    {\r\n                        type: 'text',\r\n                        name: 'value_like',\r\n                        className: '',\r\n                        label: VAL_LABEL,\r\n                        placeholder: VAL_DESCRIPTION\r\n                    },\r\n                    {\r\n                        type: 'text',\r\n                        name: 'comment_like',\r\n                        className: '',\r\n                        label: COMMENTS_LABEL,\r\n                        placeholder: COMMENTS_DESCRIPTION\r\n                    },\r\n                    {\r\n                        type: 'de-select',\r\n                        name: 'language',\r\n                        tp: 'APP_ZONE',\r\n                        multiple: true,\r\n                        className: '',\r\n                        label: ZONE_LABEL,\r\n                        placeholder: ZONE_DESCRIPTION\r\n                    },\r\n                    {\r\n                        type: 'de-select',\r\n                        name: 'appName',\r\n                        tp: 'APP_NAME',\r\n                        multiple: true,\r\n                        className: '',\r\n                        label: APP_LABEL,\r\n                        placeholder: APP_DESCRIPTION\r\n                    },\r\n                    {\r\n                        type: 'de-select',\r\n                        name: 'quality',\r\n                        tp: 'TRANSLATION_QUALITY',\r\n                        multiple: true,\r\n                        className: '',\r\n                        label: QUALITY_LABEL,\r\n                        placeholder: QUALITY_DESCRIPTION\r\n                    },\r\n                ],\r\n                value: {},\r\n                hideFooter: true\r\n            },\r\n            id: 'translation-filter-form'\r\n        }\r\n    }, [KE_LABEL])\r\n}\r\n\r\nconst i18n = [\r\n    'Generic.txt.translate.form.ke.label',\r\n    'Generic.txt.translate.form.ke.description',\r\n    'Generic.txt.translate.form.val.label',\r\n    'Generic.txt.translate.form.val.description',\r\n    'Generic.txt.translate.form.zone.label',\r\n    'Generic.txt.translate.form.zone.description',\r\n    'Generic.txt.translate.form.app.label',\r\n    'Generic.txt.translate.form.app.description',\r\n    'Generic.txt.translate.form.comments.label',\r\n    'Generic.txt.translate.form.comments.description',\r\n    'Generic.txt.translate.form.quality.label',\r\n    'Generic.txt.translate.form.quality.description'\r\n]\r\n", "import { SortBarItemProps, useTranslations } from \"@mzara/component\"\r\n\r\nexport const useTranslationListSort = (): Array<SortBarItemProps> => {\r\n    const [\r\n        KEY,\r\n        CREATED_AT,\r\n        UPDATED_AT\r\n    ] = useTranslations(i18n)\r\n    return [\r\n        { label: KEY, value: 'translationKey' },\r\n        { label: CREATED_AT, value: 'createdAt', className:\"ml-auto\" },\r\n        { label: UPDATED_AT, value: 'updatedAt' },\r\n    ]\r\n}\r\n\r\nconst i18n = [\r\n    'Generic.txt.translate.form.ke.label',\r\n    'std_created_at',\r\n    'std_updated_at',\r\n]\r\n", "import { BreadCrumbItemProps, useTranslationRoute, useTranslations } from \"@mzara/component\"\r\n\r\nexport const useTranslationBreadCrumb = (): Array<BreadCrumbItemProps> => {\r\n\r\n\tconst [\r\n\t\tHOME,\r\n\t\tTITLE\r\n\t] = useTranslations(i18n)\r\n\tconst url = useTranslationRoute()\r\n\t\r\n    return [\r\n\t\t{\r\n\t\t\tlabel: HOME,\r\n\t\t\tstartIcon: 'fa-solid fa-home',\r\n\t\t\tlink: url('')\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: TITLE,\r\n\t\t\tstartIcon: 'fa-solid fa-language',\r\n\t\t\tclassName: 'active'\r\n\t\t}\r\n\t]\r\n}\r\n\r\nconst i18n = [\r\n\t'std_home',\r\n\t'Bo.Translation.title'\r\n]\r\n", "import { TTranslation } from \"@mzara/graphql\"\r\nimport { MenuItemProps, useTranslationRoute, useTranslations, useUrlParamsEncode, useUrlParamsValue } from \"@mzara/component\"\r\nimport { ListRowMenuProps } from \"@mzara/component\"\r\nimport { useMemo } from \"react\"\r\n\r\nexport const useTranslationListMenu = () => {\r\n    \r\n    const [\r\n        EDIT,\r\n        DELETE,\r\n        CLONE\r\n    ] = useTranslations(i18n)\r\n    \r\n    const translatedRoute = useTranslationRoute()\r\n    const urlParams = useUrlParamsValue()\r\n    const encodeUrl = useUrlParamsEncode()\r\n\r\n    return useMemo((): Array<ListRowMenuProps> => ([\r\n        {\r\n            ke: 'edit',\r\n            startIcon: 'fa-solid fa-pen',\r\n            label: EDIT,\r\n            linkFn: (row: TTranslation) => translatedRoute(`translation/edit/${row.id}?${encodeUrl(urlParams)}`),\r\n            disabledFn: (row: TTranslation) => !row.isEditable,\r\n        },\r\n        {\r\n            ke: 'clone',\r\n            startIcon: 'fa-solid fa-copy',\r\n            label: CLONE,\r\n            linkFn: (row: TTranslation) => translatedRoute(`translation/clone/${row.id}?${encodeUrl(urlParams)}`),\r\n            disabledFn: (row: TTranslation) => !row.isEditable,\r\n        },\r\n        {\r\n            ke: 'delete',\r\n            startIcon: 'fa-solid fa-trash',\r\n            label: DELETE,\r\n            disabledFn: (row: TTranslation) => !row.isDeletable,\r\n        }\r\n    ]), [urlParams])\r\n}\r\n\r\nconst i18n = [\r\n    'std_edit',\r\n    'std_delete',\r\n    'std_clone',\r\n]\r\n", "import { TTranslation, TTranslationsResponse } from \"@mzara/graphql\"\r\nimport { GraphQLQueryClass } from \"@mzara/component\"\r\n\r\nexport class TranslationsQuery implements GraphQLQueryClass<TTranslationsResponse, TResponse> {\r\n    public queryKey: string = 'App.Bo.TranslationsQuery'\r\n\r\n    public gql: string = `\r\n        query translationsQuery(\r\n                $key: String,\r\n                $pageSize: Float, \r\n                $page: Float,\r\n                $sort: [TFilterSort!],\r\n                $data: JSONObject\r\n            ) {\r\n            translations (filter: {\r\n                key: $key,\r\n                pageSize: $pageSize,\r\n                page: $page,\r\n                sort: $sort,\r\n                data: $data\r\n            }) {\r\n                total\r\n                data {\r\n                    id translationKey value comment createdAt updatedAt isEditable isDeletable\r\n                    language { translationKey value }\r\n                    appName { translationKey }\r\n                    quality { translationKey }\r\n                }\r\n            }\r\n        }\r\n    `\r\n\r\n    variables?: any\r\n\r\n    constructor(variables?: any) {\r\n        this.variables = variables\r\n    }\r\n\r\n    mapFn(data: TResponse): TTranslationsResponse {\r\n        return {\r\n            total: data.translations.total,\r\n            data: data.translations.data\r\n        }\r\n    }\r\n}\r\n\r\nexport type TResponse = {\r\n    translations: {\r\n        total: number,\r\n        data: Array<TTranslation>\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["useTranslations", "useTranslationRoute", "useUrlParamsValue", "useUrlParamsEncode", "useTranslations", "useTranslations", "i18n", "_a", "_b", "_c", "useTranslations", "i18n", "useTranslations", "i18n", "useTranslationRoute", "useTranslations", "useMemo", "i18n", "jsx", "useTranslations", "i18n", "useTranslationRoute", "useUrlParamsValue", "useUrlParamsEncode"]
}
