{
  "version": 3,
  "sources": ["../src/views/CV/container/CVListContainer.tsx", "../src/views/CV/hooks/useCurriculumVitaeFilterForm.ts", "../src/views/CV/query/CurriculumVitaeListQuery.ts", "../src/views/CV/components/CurriculumVitaeItem.tsx"],
  "sourcesContent": ["import {\r\n    Box,\r\n    BreadCrumb,\r\n    Button,\r\n    ControlList,\r\n    Dialog,\r\n    Dropdown,\r\n    GenericSuspense,\r\n    List,\r\n    Menu,\r\n    RightSidebar,\r\n    useListFilterState,\r\n    useTranslationRoute,\r\n    useUrlParamsEncode,\r\n    useUrlParamsValue,\r\n} from \"@mzara/component\";\r\nimport { TRecruitingCuriculumVitae } from \"@mzara/graphql\";\r\nimport _ from \"lodash\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport { useBreadCrumb } from \"views/publication/hooks/useBreadCrumb\";\r\nimport { useCurriculumVitaeFilterForm } from \"../hooks/useCurriculumVitaeFilterForm\";\r\nimport { CurriculumVitaeListQuery } from \"../query/CurriculumVitaeListQuery\";\r\nimport { CurriculumVitaeItem } from \"../components/CurriculumVitaeItem\";\r\nimport \"../css/filterCvList.css\";\r\nimport { useState } from \"react\";\r\nimport { useStateCvItems } from \"../hooks/useStateCvItems\";\r\n\r\nconst CVListContainer = () => {\r\n    const breadcrumbItems = useBreadCrumb();\r\n    const urlParams = useUrlParamsValue();\r\n    const encodeUrl = useUrlParamsEncode();\r\n    const t = useTranslationRoute();\r\n    const filterControl = useCurriculumVitaeFilterForm();\r\n    const { filter, setFilter } = useListFilterState(CURRICULUM_LIST_ID);\r\n    const [anchorEl, setAnchorEl] = useState<HTMLAnchorElement>();\r\n    const menuStateItems = useStateCvItems();\r\n    const dropDownMenuState = [\r\n        {id: undefined, label: 'Toutes'},\r\n        ...menuStateItems\r\n    ]\r\n\r\n    return (\r\n        <div className=\"flex w-full h-max justify-center gap-5\">\r\n            <section className=\"sm:py-3 py-1 flex flex-col gap-5 bg-body-background flex-1\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <h4 className=\"font-semibold\">Curriculum Vitaes</h4>\r\n                    <Link\r\n                        to={t(`recruiting/cv/create?${encodeUrl(urlParams)}`)}\r\n                    >\r\n                        <Button\r\n                            label=\"Ajouter\"\r\n                            startIcon=\"fa-solid fa-plus\"\r\n                            className=\"flex items-center button-bg-primary text-white gap-1 button-rounded-full\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n                <BreadCrumb items={breadcrumbItems.reverse()} />\r\n\r\n                <Box\r\n                    title=\"Liste des CV\"\r\n                    className=\"box-mb-0 flex flex-col gap-3\"\r\n                    tools={\r\n                        <>\r\n                            <a\r\n                                href=\"\"\r\n                                onClick={(e) => {\r\n                                    setAnchorEl(e.currentTarget);\r\n                                    e.preventDefault();\r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    label={dropDownMenuState.find((state) => state.id == filter?.data?.state?.id)?.label}\r\n                                    endIcon=\"fa-solid fa-caret-down\"\r\n                                    className=\"!bg-[#D9D9D9] button-rounded-full text-[#3E3A3A] [&>i]:text-white\"\r\n                                />\r\n                            </a>\r\n\r\n                            <Dropdown\r\n                                anchorEl={anchorEl}\r\n                                arrow\r\n                                placement=\"bottom-end\"\r\n                                onClose={() => setAnchorEl(undefined)}\r\n                            >\r\n                                <Menu\r\n                                    items={dropDownMenuState}\r\n                                    onClick={(menu) => {\r\n                                        setFilter((v: any) => ({\r\n                                            ...v,\r\n                                            page: 0,\r\n                                            data: {\r\n                                                ...v.data,\r\n                                                state: {\r\n                                                    id: menu.id\r\n                                                }\r\n                                            }\r\n                                        }))\r\n                                        setAnchorEl(undefined)\r\n                                    }}\r\n                                />\r\n                            </Dropdown>\r\n                        </>\r\n                    }\r\n                >\r\n                    <div className=\"publication-list-content flex w-full\">\r\n                        <List\r\n                            search={false}\r\n                            selection={false}\r\n                            id={CURRICULUM_LIST_ID}\r\n                            GQLRequest={CurriculumVitaeListQuery}\r\n                            defaultFilter={{\r\n                                pageSize: 10,\r\n                                page: 0,\r\n                            }}\r\n                            onRenderRow={(row: TRecruitingCuriculumVitae) => (\r\n                                <CurriculumVitaeItem\r\n                                    id={row?.id}\r\n                                    name={row?.name}\r\n                                    advertName={row?.recrutingAdvert?.title}\r\n                                    state={row?.state}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </section>\r\n\r\n            <RightSidebar>\r\n                <Box\r\n                    title=\"Filter\"\r\n                    icon=\"fa-solid fa-filter\"\r\n                    className=\"h-full\"\r\n                >\r\n                    <ControlList\r\n                        {...filterControl}\r\n                        value={{\r\n                            ...filter?.data,\r\n                            recrutingAdvert: !_.isEmpty(\r\n                                filter?.data?.recrutingAdvert.id_among\r\n                            )\r\n                                ? filter?.data?.recrutingAdvert?.id_among\r\n                                : undefined,\r\n                            state: !_.isEmpty(filter?.data?.state.id_among)\r\n                                ? filter?.data?.state?.id_among?.map(\r\n                                      (item) => ({ id: item })\r\n                                  )\r\n                                : undefined,\r\n                        }}\r\n                        onChange={(value) =>\r\n                            setFilter((v: any) => ({\r\n                                ...v,\r\n                                page: 0,\r\n                                data: {\r\n                                    ...v.data,\r\n                                    ...value,\r\n                                    recrutingAdvert: {\r\n                                        id_among: value.recrutingAdvert,\r\n                                    },\r\n                                    state: {\r\n                                        id_among: value.state?.map(\r\n                                            (item) => item.id\r\n                                        ),\r\n                                    },\r\n                                },\r\n                            }))\r\n                        }\r\n                    />\r\n                </Box>\r\n            </RightSidebar>\r\n\r\n            <Outlet />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CURRICULUM_LIST_ID = \"CurriculumVitae.List\";\r\n\r\n\r\nexport default CVListContainer;\r\n", "import { ControlListProps } from \"@mzara/component\";\r\n\r\nexport const useCurriculumVitaeFilterForm = ():ControlListProps => {\r\n    return {\r\n        data: {\r\n            forms: [\r\n                {\r\n                    type: 'text',\r\n                    name: 'name_like',\r\n                    label: \"Nom\"\r\n                },\r\n                {\r\n                    type: 'de-select',\r\n                    name: 'state',\r\n                    label:'Etat',\r\n                    multiple: true,\r\n                    tp: 'RECRUITING_CV_STATE',\r\n                    className: 'scroll-selected'\r\n                },\r\n                {\r\n                    type: 'select',\r\n                    name: 'recrutingAdvert',\r\n                    label: 'Annonce',\r\n                    multiple: true,\r\n                    GQLProps: {\r\n                        gql,\r\n                        labelProp: 'title',\r\n                        valueProp: 'id',\r\n                        rootProp: 'recruitingAdverts.data'\r\n                    }\r\n                }\r\n            ],\r\n            hideFooter: true,\r\n            value: {},\r\n            next: {},\r\n            back: {},\r\n            graphQL: {\r\n                entity: 'recruitingCuriculumVitae',\r\n            }\r\n        },\r\n        id: 'curriculumVitae-filter-form'\r\n    }\r\n}\r\n\r\nconst gql = `\r\n    query RecruitingAdvertsSelectQuery{\r\n        recruitingAdverts{\r\n            total \r\n            data {\r\n                id title\r\n            }\r\n        }\r\n    }\r\n`", "import { GraphQLQueryClass } from \"@mzara/component\";\r\nimport { TRecruitingCuriculumVitae } from \"@mzara/graphql\";\r\nimport { TRecruitingCuriculumVitaesResponse } from \"@mzara/graphql\";\r\nexport class CurriculumVitaeListQuery implements GraphQLQueryClass <TRecruitingCuriculumVitaesResponse, TResponseCurriculumVitae>{\r\n    public queryKey: string = 'App.Harea.RecruitingCuriculumVitaesQuery' \r\n    public gql: string = \r\n    `\r\n        query CurriculumVitaeListQuery(\r\n            $pageSize: Float,\r\n            $page: Float,\r\n            $data: JSONObject\r\n        ){\r\n            recruitingCuriculumVitaes(filter: {\r\n                data: $data,\r\n                pageSize: $pageSize,\r\n                page: $page\r\n            }){\r\n                total data {\r\n                    id name state{value} recrutingAdvert{\r\n                        id title\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `\r\n    variables?: any\r\n    constructor(variables?: any){\r\n        this.variables=variables\r\n    }\r\n    mapFn(data: TResponseCurriculumVitae) : TRecruitingCuriculumVitaesResponse{\r\n            return {\r\n                total : data.recruitingCuriculumVitaes.total,\r\n                data: data.recruitingCuriculumVitaes.data\r\n            }\r\n    };\r\n    \r\n}\r\n\r\nexport type TResponseCurriculumVitae = {\r\n    recruitingCuriculumVitaes: {\r\n        total: number,\r\n        data: Array<TRecruitingCuriculumVitae>\r\n    }\r\n}", "import {\r\n    Chip,\r\n    IconButton,\r\n    useCdnAssets,\r\n    useTranslationRoute,\r\n} from \"@mzara/component\";\r\nimport { TDescriptor } from \"@mzara/graphql\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CurriculumVitaeItem = ({\r\n    name,\r\n    advertName,\r\n    id,\r\n    state,\r\n    ...props\r\n}: CurriculumVitaeItemProps) => {\r\n    const cdn = useCdnAssets();\r\n    const t = useTranslationRoute();\r\n    return (\r\n        <div\r\n            className=\"flex items-center justify-between w-full pt-2 pb-5 px-3 border-b\"\r\n            {...props}\r\n        >\r\n            <div className=\"flex items-start gap-5\">\r\n                <div className=\"object-cover object-center rounded-full w-12 h-12 overflow-hidden\">\r\n                    <img src={cdn(\"/img/isa/profile-user.png\")} alt=\"\" />\r\n                </div>\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <h6 className=\"font-semibold\">{name || 'Unknown'}</h6>\r\n                    {state?.value && <Chip label={stateDict[state?.value]} color={`${ColorState[state.value]}`} className=\"text-xs  rounded-full w-fit px-2\" />}\r\n                    <span>\r\n                        Annonce: <strong> {advertName} </strong>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <Link to={t(`recruiting/cv/${id}/details`)}>\r\n                <IconButton icon=\"fa-solid fa-angle-right\" />\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\nexport const stateDict = {\r\n    \"NEW\" : \"Nouveau\",\r\n    \"TESTING\" : \"En cours de teste\",\r\n    \"INTERVIEW\" : \"Entretien\",\r\n    \"REJECTED\" : \"Rejet\u00E9\"\r\n}\r\nexport const ColorState = {\r\n    \"NEW\" : \"#48496C\",\r\n    \"TESTING\" : \"#17a2b8\",\r\n    \"INTERVIEW\" : \"#110ee438\",\r\n    \"REJECTED\" : \"#E4260E\"\r\n}\r\n\r\nexport type CurriculumVitaeItemProps = {\r\n    name?: string;\r\n    advertName?: string;\r\n    id: number;\r\n    state?: TDescriptor\r\n};\r\n"],
  "mappings": "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",
  "names": ["useTranslationRoute", "Link", "jsx", "jsxs", "useTranslationRoute", "Link", "_a", "_b"]
}
