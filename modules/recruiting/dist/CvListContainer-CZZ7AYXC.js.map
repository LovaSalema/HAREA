{
  "version": 3,
  "sources": ["../src/views/publication-details/views/cv/containers/CvListContainer.tsx", "../src/views/CV/hooks/useRecruitingCuriculumVitaesForm.tsx"],
  "sourcesContent": ["import { Box, Button, ControlList, DateSpan, Dialog, GenericSuspense } from \"@mzara/component\";\r\nimport React, { useState } from \"react\";\r\nimport { useRecruitingCuriculumVitaesQuery } from \"views/CV/hooks/useRecruitingCuriculumVitaesQuery\";\r\nimport '../css/loginContainer.css';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useTranslationRoute } from \"@mzara/component\";\r\nimport { TRecruitingCuriculumVitae } from \"@mzara/graphql\";\r\nimport { useRecruitingCuriculumVitaeForm } from \"views/CV/hooks/useRecruitingCuriculumVitaesForm\";\r\nimport moment from \"moment\";\r\nimport { useRecruitingAdvertsDetailsQuery } from \"views/publication-details/hooks/useRecruitingAdvertsDetailsQuery\";\r\nimport { ColorState } from \"views/CV-details/views/details/components/CvDetails\";\r\nimport { stateDict } from \"views/CV-details/views/details/components/CvDetails\";\r\n\r\nconst CvListContainer = () => {\r\n    const t = useTranslationRoute();\r\n    const { id } = useParams();\r\n    const { data, invalidateQuery } = useRecruitingAdvertsDetailsQuery(parseInt(id), true);\r\n    const ControlCvList = useRecruitingCuriculumVitaeForm();\r\n    const [openListCV, setOpenListCv] = useState(false);\r\n    const closeCVDialog = () => {\r\n        setOpenListCv(false)\r\n        invalidateQuery()\r\n    }\r\n\r\n    const handleOnClick = () => {\r\n        setOpenListCv(true);\r\n    }\r\n    return (<>\r\n        <Box >\r\n            <div className=\"flex justify-between px-6 py-3\">\r\n                <p>\r\n                    Liste des CV\r\n                </p>\r\n                <Button\r\n                    label=\"Ajouter\"\r\n                    startIcon=\"fa-solid fa-plus\"\r\n                    className=\"flex items-center !bg-[#a1a1a29f] text-white gap-1 button-rounded-full\"\r\n                    onClick={() => handleOnClick()}\r\n                />\r\n            </div>\r\n            <ul className=\"flex flex-col gap-2 \">\r\n                {data?.cvs?.map(item => (<>\r\n\r\n                    <li className=\"border-b mx-4 py-3 flex justify-between items-center relative \">\r\n                        <Link to={t(`recruiting/cv/${item?.id}`)}>\r\n                            <div className=\"flex flex-col gap-1\">\r\n\r\n                                <div className=\"flex  gap-5 items-center justify-center\">\r\n                                    <p><b>{item.name}</b></p>\r\n                                    <p style={{backgroundColor: `${ColorState[item?.state?.value]}`}} className=' flex justify-center items-center text-xs w-auto px-2 h-[20px] text-white rounded-xl'>{stateDict[item?.state?.value]}</p>\r\n                                </div>\r\n                                <div className=\"w-full flex gap-2 items-center\">\r\n                                    <i className=\"fa-solid fa-clock text-[#6C6868]\"></i>\r\n                                    <span className=\"text-xs\"> {moment(item?.createdAt).format('DD/MM/YYYY')} </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Link>\r\n                        {\r\n                            item?.state?.value=='NEW' ? (<Button\r\n                                label=\"Envoyer test\"\r\n                                className=\"flex !bg-primary text-white gap-1 !rounded-full absolute right-7 \" \r\n                            /> ) : \"\"\r\n                        } \r\n                        <Link to={t(`recruiting/cv/${item?.id}/details`)}>\r\n                            <i className=\"fa-solid fa-angle-right text-[#6C6868] \"></i>\r\n                        </Link>\r\n\r\n                    </li>\r\n\r\n                </>))}\r\n            </ul>\r\n        </Box>\r\n\r\n\r\n        <Dialog\r\n            open={openListCV}\r\n            title='Ajouter CV'\r\n            onDismiss={() => closeCVDialog()}\r\n        >\r\n            <GenericSuspense>\r\n                <ControlList\r\n                    {...ControlCvList}\r\n                    value={{ recrutingAdvert: { id: parseInt(id) } }}\r\n                    onSubmited={() => closeCVDialog()}\r\n                    onCancel={() => closeCVDialog()}\r\n                />\r\n            </GenericSuspense>\r\n        </Dialog>\r\n    </>);\r\n}\r\nexport default CvListContainer;", "import { ControlListProps } from \"@mzara/component\"\r\n\r\nexport const useRecruitingCuriculumVitaeForm = ():ControlListProps => {\r\n    return {\r\n        data: {\r\n            forms: [\r\n                {\r\n                    type: 'text',\r\n                    name: 'name',\r\n                    label: \"Nom\",\r\n                    required: true\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    name: 'phone',\r\n                    label: \"T\u00E9l\u00E9phone\",\r\n                    required: true\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    name: 'email',\r\n                    label: \"Email\",\r\n                    required: true\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    name: 'adress',\r\n                    label: \"Adresse\"\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    name: 'school',\r\n                    label: \"Lyc\u00E9e ou Universit\u00E9\"\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    name: 'degree',\r\n                    label: \"Dipl\u00F4me\"\r\n                },\r\n                {\r\n                    type: 'textarea',\r\n                    name: 'comment',\r\n                    label: \"Commentaire\"\r\n                },\r\n                {\r\n                    type: 'file',\r\n                    multiple: true,\r\n                    name: 'files',\r\n                    label: \"Pi\u00E8ce jointe\"\r\n                },\r\n               \r\n            ],\r\n            value: {},\r\n            next: {\r\n                label: \"Ajouter CV\"\r\n            },\r\n            back: {\r\n                label: \"Annuler CV\"\r\n            },\r\n            graphQL: {\r\n                entity: 'recruitingCuriculumVitae'\r\n            }\r\n        },\r\n        id: 'CV-add-form'\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["_a"]
}
