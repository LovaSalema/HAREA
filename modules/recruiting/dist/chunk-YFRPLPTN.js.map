{
  "version": 3,
  "sources": ["../src/views/template-details/views/about/hooks/useEvaluationTemplateDetailsQuery.ts", "../src/views/template-details/views/about/queries/EvaluationTemplateDetailsQuery.ts"],
  "sourcesContent": ["import { useGraphqlQuery } from \"@mzara/component\"\r\nimport { EvaluationTemplateDetailsQuery } from \"../queries/EvaluationTemplateDetailsQuery\"\r\n\r\nexport const useEvaluationTemplateDetailsQuery = (id: number, suspense: boolean) => {\r\n    return useGraphqlQuery(new EvaluationTemplateDetailsQuery({id}), {enabled: id !== undefined, suspense})\r\n}", "import { GraphQLQueryClass } from \"@mzara/component\";\r\nimport { TEvaluationTemplate } from \"@mzara/graphql\";\r\n\r\nexport class EvaluationTemplateDetailsQuery implements GraphQLQueryClass<TEvaluationTemplate, TResponse> {\r\n    public queryKey: string = 'App.Harea.EvaluationTemplateDetailsQuery';\r\n    public gql: string = `\r\n        query EvaluationTemplateDetails($id: Float){\r\n            evaluationTemplate(filter: {id: $id}){\r\n                id title description isPublic tags{value color} evaluations{\r\n                    id\r\n                }\r\n            }\r\n        }\r\n    `;\r\n    variables?: any;\r\n    constructor(variables?: any) {\r\n        this.variables = variables\r\n    }\r\n    mapFn(data: TResponse): TEvaluationTemplate {\r\n        return data.evaluationTemplate\r\n    };\r\n}\r\n\r\nexport type TResponse = {\r\n    evaluationTemplate: TEvaluationTemplate\r\n}"],
  "mappings": ";;AAAA,SAAS,uBAAuB;;;ACGzB,IAAM,iCAAN,MAAkG;AAAA,EAYrG,YAAY,WAAiB;AAX7B,SAAO,WAAmB;AAC1B,SAAO,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWjB,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,MAAM,MAAsC;AACxC,WAAO,KAAK;AAAA,EAChB;AACJ;;;ADlBO,IAAM,oCAAoC,CAAC,IAAY,aAAsB;AAChF,SAAO,gBAAgB,IAAI,+BAA+B,EAAC,GAAE,CAAC,GAAG,EAAC,SAAS,OAAO,QAAW,SAAQ,CAAC;AAC1G;",
  "names": []
}
