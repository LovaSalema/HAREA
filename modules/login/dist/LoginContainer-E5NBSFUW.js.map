{
  "version": 3,
  "sources": ["../src/views/login/components/LoginForm.tsx", "../src/views/login/hooks/useLoginOAuthMutation.ts", "../src/views/login/hooks/useLoginMutation.ts", "../src/views/login/hooks/useLoginForm.tsx", "../src/views/login/components/BackgroungRight.tsx", "../src/views/login/containers/LoginContainer.tsx"],
  "sourcesContent": ["import React, { useCallback, useEffect, useMemo } from \"react\";\r\nimport { useState } from 'react';\r\nimport { Alert, ControlList, useCdnAssets, useTranslations } from \"@mzara/component\";\r\nimport { useLoginOAuthMutation } from \"../hooks/useLoginOAuthMutation\";\r\nimport { useLoginMutation } from \"../hooks/useLoginMutation\";\r\nimport { useRedirectToApp } from \"hooks/useRedirectApp\";\r\nimport { useLoginForm } from \"../hooks/useLoginForm\";\r\nconst LoginForm = () => {\r\n\r\n    let cdn = useCdnAssets();\r\n    const [\r\n        MESSAGE,\r\n        FORGOT_PASSWORD,\r\n        LOGIN_WITH_GOOGLE,\r\n        LOGIN_WITH_FACEBOOK,\r\n        CREDENTIAL_ERROR\r\n    ] = useTranslations(i18n)\r\n\r\n    const form = useLoginForm()\r\n\r\n    const redirectToApp = useRedirectToApp()\r\n    const loginMutation = useLoginMutation()\r\n    const oAuthMutation = useLoginOAuthMutation()\r\n\r\n    useEffect(() => {\r\n        if (loginMutation.isSuccess) {\r\n            redirectToApp()\r\n            return;\r\n        }\r\n    }, [loginMutation])\r\n\r\n    useEffect(() => {\r\n        if (oAuthMutation.isSuccess) {\r\n            redirectToApp()\r\n            return;\r\n        }\r\n    }, [oAuthMutation])\r\n\r\n    const handleSubmit = useCallback((value: Record<string, any>) => {\r\n        loginMutation.mutate(value)\r\n    }, [loginMutation])\r\n\r\n    const handleGoogleSignInSuccess = async (response: any) => {\r\n        const { id_token } = response.getAuthResponse()\r\n        oAuthMutation.mutate({\r\n            auth_type: 'google',\r\n            id_token\r\n        })\r\n    }\r\n\r\n    const handleGoogleSignInFailed = () => {\r\n        // Todo : show error message\r\n    }\r\n\r\n    const handleFacebookSignin = async (response: any) => {\r\n        console.log(response)\r\n        oAuthMutation.mutate({\r\n            auth_type: 'facebook',\r\n            id: response.id,\r\n            id_token: response.accessToken,\r\n        })\r\n    }\r\n\r\n    const errorMessage = useMemo(() => {\r\n        if (loginMutation.isError) {\r\n            const message = loginMutation.error?.response?.errors?.[0]?.message\r\n\r\n            if (message === 'FAIL') {\r\n                return CREDENTIAL_ERROR\r\n            }\r\n\r\n            return message\r\n        }\r\n        return undefined\r\n    }, [loginMutation.error])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-auto flex flex-col justify-start h-full items-center\">\r\n                <div className=\"m-auto flex flex-col gap-4\">\r\n                    <img className=\"w-[62px]\" src={cdn('/img/isa/logo.png')} alt=\"logo\" />\r\n                    <div className=\"\">\r\n                        <h3 className=\"font-extrabold\">Sign in</h3>\r\n                        <p>Don't have an account? <a href=\"\" className=\"text-[#0007BB]\">Sign up.</a></p>\r\n                    </div>\r\n                    <div className=\"bg-[#0006bb09] px-3 py-3 border-2 border-[#0007BB] rounded-lg\">\r\n                        <p className=\"text-[#0007BB]\">\r\n                            Lorem Ipsum <b>is simply dummy</b> text of the <br />\r\n                            printing and typesetting industry.<br />\r\n                            Lorem Ipsum has been the <br />\r\n                            industry's <b>standard dummy</b> text\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            errorMessage &&\r\n                            <Alert\r\n                                type=\"danger\"\r\n                                text={errorMessage}\r\n                            />\r\n                        }\r\n\r\n                        <ControlList\r\n                            {...form}\r\n                            defaultValue={{\r\n                                userName: '',\r\n                                password: '',\r\n                                remember: true,\r\n                            }}\r\n                            onSubmit={handleSubmit}\r\n                            isSubmit={loginMutation.isLoading}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"flex w-full justify-between\">\r\n                        <a href=\"www.google.com\">\r\n                            <div className=\"flex justify-between border rounded-3xl px-2 py-2 cursor-pointer\">\r\n                                <i className=\"fa-brands fa-google relative top-1\"></i>\r\n                                <p className=\"text-[11px] m-1\">Sign in with google</p>\r\n                            </div>\r\n                        </a>\r\n                        <a href=\"www.facebook.com\">\r\n                            <div className=\"flex border rounded-3xl px-2 py-2 cursor-pointer\">\r\n                                <i className=\"fa-brands fa-facebook-f relative top-1\"></i>\r\n                                <p className=\"text-[11px] m-1\">Sign in with facebook</p>\r\n                            </div>\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div className=\"flex w-full justify-center\">\r\n                        <b><p><b className=\"text-[#0007BB] m-auto\">Login_1.5.4</b>.2023</p></b>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst i18n = [\r\n    'Login.SignIn.description',\r\n    'Login.SignIn.ForgotPassword.label',\r\n    'Login.SignIn.Federated.Google.label',\r\n    'Login.SignIn.Federated.Facebook.label',\r\n    'Login.SignIn.Credential.NotMatch.description'\r\n]\r\n\r\nexport default LoginForm;\r\n", "import { useGraphqlMutation } from \"@mzara/component\"\r\n\r\nexport const useLoginOAuthMutation = () => {\r\n    return useGraphqlMutation(OAUTH)\r\n}\r\n\r\nexport const OAUTH = `\r\nmutation oauth(\r\n    $auth_type: String!, \r\n    $id: String,\r\n    $id_token: String!\r\n) {\r\n    oauth(\r\n        data: {\r\n            auth_type: $auth_type, \r\n            id: $id,\r\n            id_token: $id_token\r\n        }\r\n    )\r\n}\r\n`\r\n", "import { useGraphqlMutation, useTranslation } from \"@mzara/component\"\r\n\r\nexport const useLoginMutation = () => {\r\n\r\n    const t = useTranslation()\r\n\r\n    return useGraphqlMutation(LOGIN, {\r\n        transformErrorMessage: (e) => {\r\n            if (e.message === 'FAIL') {\r\n                return t('std_password_does_match_err')\r\n            }\r\n            return undefined\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const LOGIN = `\r\nmutation login($userName: String!, $password: String!, $remember: Boolean!) {\r\n    login(\r\n        data: {\r\n            userName: $userName, \r\n            password: $password, \r\n            remember: $remember\r\n        }\r\n    )\r\n}\r\n`\r\n", "import { ControlListProps, useTranslations } from \"@mzara/component\"\r\nimport { useMemo } from \"react\"\r\n\r\nexport const useLoginForm = () => {\r\n\r\n    const [\r\n        EMAIL,\r\n        PASSWORD,\r\n        REMEMBER_ME,\r\n        SUBMIT,\r\n    ] = useTranslations(i18n);\r\n\r\n    return useMemo((): ControlListProps => {\r\n        return {\r\n            data: {\r\n                forms: [\r\n                    {\r\n                        type: 'input',\r\n                        id: 'userName',\r\n                        name: 'userName',\r\n                        placeholder: EMAIL,\r\n                        required: true,\r\n                        autoFocus: true\r\n                    },\r\n                    {\r\n                        type: 'password',\r\n                        id: 'password',\r\n                        name: 'password',\r\n                        placeholder: PASSWORD,\r\n                        canToggle: true,\r\n                        required: true\r\n                    },\r\n                    {\r\n                        type: 'toggle',\r\n                        id: 'remember',\r\n                        name: 'remember',\r\n                        placeholder: REMEMBER_ME,\r\n                    },\r\n                ],\r\n                value: {},\r\n                next: {\r\n                    className: 'btn btn-primary full-width',\r\n                    label: SUBMIT,\r\n                    endIcon: 'fa-sharp fa-solid fa-paper-plane'\r\n                },\r\n                hideBack: true\r\n            },\r\n            id: 'login-form'\r\n        }\r\n    }, [EMAIL, PASSWORD])\r\n}\r\n\r\nconst i18n = [\r\n    'Login.SignIn.Form.Email.label',\r\n    'Login.SignIn.Form.Password.label',\r\n    'Login.SignIn.Form.Remember.label',\r\n    'Login.SignIn.Form.Submit.label',\r\n];\r\n\r\n", "import react from 'react';\r\nimport { useCdnAssets } from '@mzara/component';\r\nconst BackgroundRight = () => {\r\n    const cdn = useCdnAssets();\r\n    return (\r\n        <>\r\n            <img className=\"h-[40%] rotate-180 \" src={cdn('/img/isa/Group_127.svg')} alt='group-bg' />\r\n            <div className=\"flex flex-col gap-6\">\r\n                <h2 className=\"font-black leading-9\">Welcome to <br />  our community</h2>\r\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting <br />industry. Lorem Ipsum has been the industry's standard dummy\r\n\r\n                </p>\r\n                <div className=\"flex w-full justify-start\">\r\n                    <img className=\"h-[30px]\" src={cdn('img/isa/profile-user.png')} alt=\"image\" />\r\n                    <img className=\"h-[30px]  relative right-2\" src={cdn('img/isa/profile-user.png')} alt=\"image\" />\r\n                    <img className=\"h-[30px] relative right-4\" src={cdn('img/isa/profile-user.png')} alt=\"image\" />\r\n                    <p>More than 17k people joined us, it's your turn</p>\r\n                </div>\r\n            </div>\r\n            <img className=\"h-[40%]\" src={cdn('/img/isa/Group_127.svg')} alt='group-bg' />\r\n        </>\r\n    );\r\n}\r\nexport default BackgroundRight;", "import react, { useState } from \"react\";\r\n//import { useCdnAssets } from \"@mzara/component\"\r\nimport '../../singup/css/loginContainer.css'\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport BackgroundRight from \"../components/BackgroungRight\";\r\nconst LoginContainer = () => {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"flex h-screen \">\r\n                <div className=\" flex w-full justify-center lg:basis-1/2\">\r\n                    <LoginForm />\r\n                </div>\r\n                <div className=\"lg:flex md:visible bg-[#48496C] lg:basis-1/2 w-full  flex-col justify-between items-center text-white\">\r\n                    <BackgroundRight />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default LoginContainer;"],
  "mappings": ";;;;;;;;;;;;AAAA,SAAgB,aAAa,WAAW,WAAAA,gBAAe;AAEvD,SAAS,OAAO,aAAa,cAAc,mBAAAC,wBAAuB;;;ACFlE,SAAS,0BAA0B;AAE5B,IAAM,wBAAwB,MAAM;AACvC,SAAO,mBAAmB,KAAK;AACnC;AAEO,IAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACNrB,SAAS,sBAAAC,qBAAoB,sBAAsB;AAE5C,IAAM,mBAAmB,MAAM;AAElC,QAAM,IAAI,eAAe;AAEzB,SAAOA,oBAAmB,OAAO;AAAA,IAC7B,uBAAuB,CAAC,MAAM;AAC1B,UAAI,EAAE,YAAY,QAAQ;AACtB,eAAO,EAAE,6BAA6B;AAAA,MAC1C;AACA,aAAO;AAAA,IACX;AAAA,EACJ,CAAC;AACL;AAGO,IAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACjBrB,SAA2B,uBAAuB;AAClD,SAAS,eAAe;AAEjB,IAAM,eAAe,MAAM;AAE9B,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAI,gBAAgB,IAAI;AAExB,SAAO,QAAQ,MAAwB;AACnC,WAAO;AAAA,MACH,MAAM;AAAA,QACF,OAAO;AAAA,UACH;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,YACb,UAAU;AAAA,YACV,WAAW;AAAA,UACf;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,YACb,WAAW;AAAA,YACX,UAAU;AAAA,UACd;AAAA,UACA;AAAA,YACI,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,MAAM;AAAA,YACN,aAAa;AAAA,UACjB;AAAA,QACJ;AAAA,QACA,OAAO,CAAC;AAAA,QACR,MAAM;AAAA,UACF,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS;AAAA,QACb;AAAA,QACA,UAAU;AAAA,MACd;AAAA,MACA,IAAI;AAAA,IACR;AAAA,EACJ,GAAG,CAAC,OAAO,QAAQ,CAAC;AACxB;AAEA,IAAM,OAAO;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;;;AHzDA;AAOA,IAAM,YAAY,MAAM;AAEpB,MAAI,MAAM,aAAa;AACvB,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,IAAIC,iBAAgBC,KAAI;AAExB,QAAM,OAAO,aAAa;AAE1B,QAAM,gBAAgB,iBAAiB;AACvC,QAAM,gBAAgB,iBAAiB;AACvC,QAAM,gBAAgB,sBAAsB;AAE5C,YAAU,MAAM;AACZ,QAAI,cAAc,WAAW;AACzB,oBAAc;AACd;AAAA,IACJ;AAAA,EACJ,GAAG,CAAC,aAAa,CAAC;AAElB,YAAU,MAAM;AACZ,QAAI,cAAc,WAAW;AACzB,oBAAc;AACd;AAAA,IACJ;AAAA,EACJ,GAAG,CAAC,aAAa,CAAC;AAElB,QAAM,eAAe,YAAY,CAAC,UAA+B;AAC7D,kBAAc,OAAO,KAAK;AAAA,EAC9B,GAAG,CAAC,aAAa,CAAC;AAElB,QAAM,4BAA4B,CAAO,aAAkB;AACvD,UAAM,EAAE,SAAS,IAAI,SAAS,gBAAgB;AAC9C,kBAAc,OAAO;AAAA,MACjB,WAAW;AAAA,MACX;AAAA,IACJ,CAAC;AAAA,EACL;AAEA,QAAM,2BAA2B,MAAM;AAAA,EAEvC;AAEA,QAAM,uBAAuB,CAAO,aAAkB;AAClD,YAAQ,IAAI,QAAQ;AACpB,kBAAc,OAAO;AAAA,MACjB,WAAW;AAAA,MACX,IAAI,SAAS;AAAA,MACb,UAAU,SAAS;AAAA,IACvB,CAAC;AAAA,EACL;AAEA,QAAM,eAAeC,SAAQ,MAAM;AA/DvC;AAgEQ,QAAI,cAAc,SAAS;AACvB,YAAM,WAAU,qCAAc,UAAd,mBAAqB,aAArB,mBAA+B,WAA/B,mBAAwC,OAAxC,mBAA4C;AAE5D,UAAI,YAAY,QAAQ;AACpB,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX,GAAG,CAAC,cAAc,KAAK,CAAC;AAGxB,SACI;AAAA,IACI,8BAAC;AAAA,MAAI,WAAU;AAAA,MACX,+BAAC;AAAA,QAAI,WAAU;AAAA,QACX;AAAA,8BAAC;AAAA,YAAI,WAAU;AAAA,YAAW,KAAK,IAAI,mBAAmB;AAAA,YAAG,KAAI;AAAA,WAAO;AAAA,UACpE,qBAAC;AAAA,YAAI,WAAU;AAAA,YACX;AAAA,kCAAC;AAAA,gBAAG,WAAU;AAAA,gBAAiB;AAAA,eAAO;AAAA,cACtC,qBAAC;AAAA,gBAAE;AAAA;AAAA,kBAAuB,oBAAC;AAAA,oBAAE,MAAK;AAAA,oBAAG,WAAU;AAAA,oBAAiB;AAAA,mBAAQ;AAAA;AAAA,eAAI;AAAA;AAAA,WAChF;AAAA,UACA,oBAAC;AAAA,YAAI,WAAU;AAAA,YACX,+BAAC;AAAA,cAAE,WAAU;AAAA,cAAiB;AAAA;AAAA,gBACd,oBAAC;AAAA,kBAAE;AAAA,iBAAe;AAAA,gBAAI;AAAA,gBAAa,oBAAC,QAAG;AAAA,gBAAE;AAAA,gBACnB,oBAAC,QAAG;AAAA,gBAAE;AAAA,gBACf,oBAAC,QAAG;AAAA,gBAAE;AAAA,gBACpB,oBAAC;AAAA,kBAAE;AAAA,iBAAc;AAAA,gBAAI;AAAA;AAAA,aACpC;AAAA,WACJ;AAAA,UAEA,qBAAC;AAAA,YAEO;AAAA,8BACA,oBAAC;AAAA,gBACG,MAAK;AAAA,gBACL,MAAM;AAAA,eACV;AAAA,cAGJ,oBAAC,8CACO,OADP;AAAA,gBAEG,cAAc;AAAA,kBACV,UAAU;AAAA,kBACV,UAAU;AAAA,kBACV,UAAU;AAAA,gBACd;AAAA,gBACA,UAAU;AAAA,gBACV,UAAU,cAAc;AAAA,gBAC5B;AAAA;AAAA,WACJ;AAAA,UAGA,qBAAC;AAAA,YAAI,WAAU;AAAA,YACX;AAAA,kCAAC;AAAA,gBAAE,MAAK;AAAA,gBACJ,+BAAC;AAAA,kBAAI,WAAU;AAAA,kBACX;AAAA,wCAAC;AAAA,sBAAE,WAAU;AAAA,qBAAqC;AAAA,oBAClD,oBAAC;AAAA,sBAAE,WAAU;AAAA,sBAAkB;AAAA,qBAAmB;AAAA;AAAA,iBACtD;AAAA,eACJ;AAAA,cACA,oBAAC;AAAA,gBAAE,MAAK;AAAA,gBACJ,+BAAC;AAAA,kBAAI,WAAU;AAAA,kBACX;AAAA,wCAAC;AAAA,sBAAE,WAAU;AAAA,qBAAyC;AAAA,oBACtD,oBAAC;AAAA,sBAAE,WAAU;AAAA,sBAAkB;AAAA,qBAAqB;AAAA;AAAA,iBACxD;AAAA,eACJ;AAAA;AAAA,WAEJ;AAAA,UACA,oBAAC;AAAA,YAAI,WAAU;AAAA,YACX,8BAAC;AAAA,cAAE,+BAAC;AAAA,gBAAE;AAAA,sCAAC;AAAA,oBAAE,WAAU;AAAA,oBAAwB;AAAA,mBAAW;AAAA,kBAAI;AAAA;AAAA,eAAK;AAAA,aAAI;AAAA,WACvE;AAAA;AAAA,OACJ;AAAA,KACJ;AAAA,GACJ;AAER;AAEA,IAAMD,QAAO;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AAEA,IAAO,oBAAQ;;;AIpJf,SAAS,gBAAAE,qBAAoB;AAD7B,qBAAAC,WAAA,OAAAC,MAAA,QAAAC,aAAA;AAEA,IAAM,kBAAkB,MAAM;AAC1B,QAAM,MAAMH,cAAa;AACzB,SACI,gBAAAG,MAAAF,WAAA;AAAA,IACI;AAAA,sBAAAC,KAAC;AAAA,QAAI,WAAU;AAAA,QAAsB,KAAK,IAAI,wBAAwB;AAAA,QAAG,KAAI;AAAA,OAAW;AAAA,MACxF,gBAAAC,MAAC;AAAA,QAAI,WAAU;AAAA,QACX;AAAA,0BAAAA,MAAC;AAAA,YAAG,WAAU;AAAA,YAAuB;AAAA;AAAA,cAAW,gBAAAD,KAAC,QAAG;AAAA,cAAE;AAAA;AAAA,WAAe;AAAA,UACrE,gBAAAC,MAAC;AAAA,YAAE;AAAA;AAAA,cAAiE,gBAAAD,KAAC,QAAG;AAAA,cAAE;AAAA;AAAA,WAE1E;AAAA,UACA,gBAAAC,MAAC;AAAA,YAAI,WAAU;AAAA,YACX;AAAA,8BAAAD,KAAC;AAAA,gBAAI,WAAU;AAAA,gBAAW,KAAK,IAAI,0BAA0B;AAAA,gBAAG,KAAI;AAAA,eAAQ;AAAA,cAC5E,gBAAAA,KAAC;AAAA,gBAAI,WAAU;AAAA,gBAA6B,KAAK,IAAI,0BAA0B;AAAA,gBAAG,KAAI;AAAA,eAAQ;AAAA,cAC9F,gBAAAA,KAAC;AAAA,gBAAI,WAAU;AAAA,gBAA4B,KAAK,IAAI,0BAA0B;AAAA,gBAAG,KAAI;AAAA,eAAQ;AAAA,cAC7F,gBAAAA,KAAC;AAAA,gBAAE;AAAA,eAA8C;AAAA;AAAA,WACrD;AAAA;AAAA,OACJ;AAAA,MACA,gBAAAA,KAAC;AAAA,QAAI,WAAU;AAAA,QAAU,KAAK,IAAI,wBAAwB;AAAA,QAAG,KAAI;AAAA,OAAW;AAAA;AAAA,GAChF;AAER;AACA,IAAO,0BAAQ;;;ACvBf,qBAAAE,WAAA,OAAAC,MAAA,QAAAC,aAAA;AAKA,IAAM,iBAAiB,MAAM;AAEzB,SACI,gBAAAD,KAAAD,WAAA;AAAA,IACI,0BAAAE,MAAC;AAAA,MAAI,WAAU;AAAA,MACX;AAAA,wBAAAD,KAAC;AAAA,UAAI,WAAU;AAAA,UACX,0BAAAA,KAAC,qBAAU;AAAA,SACf;AAAA,QACA,gBAAAA,KAAC;AAAA,UAAI,WAAU;AAAA,UACX,0BAAAA,KAAC,2BAAgB;AAAA,SACrB;AAAA;AAAA,KACJ;AAAA,GACJ;AAER;AACA,IAAO,yBAAQ;",
  "names": ["useMemo", "useTranslations", "useGraphqlMutation", "useTranslations", "i18n", "useMemo", "useCdnAssets", "Fragment", "jsx", "jsxs", "Fragment", "jsx", "jsxs"]
}
